<% layout("/layouts/boilerplate") -%>

<div class="container mt-4">
  <h3>Book: <%= listing.title %></h3>
  <p class="text-muted"><%= listing.location %> • ₹<%= listing.price.toLocaleString("en-IN") %> / night</p>

  <form action="/listings/<%= listing._id %>/book" method="POST" class="row g-3">
    <div class="col-md-4">
      <label class="form-label">Check-in</label>
      <input type="date" name="checkIn" class="form-control" required>
    </div>
    <div class="col-md-4">
      <label class="form-label">Check-out</label>
      <input type="date" name="checkOut" class="form-control" required>
    </div>
    <div class="col-md-4">
      <label class="form-label">Guests</label>
      <input type="number" name="guests" min="1" value="1" class="form-control" required>
    </div>

    <div class="col-12">
      <button type="submit" id="continueBtn" class="btn btn-primary">Continue to checkout</button>
      <a href="/listings/<%= listing._id %>" class="btn btn-outline-secondary ms-2">Cancel</a>
    </div>
  </form>
</div>

<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
document.querySelector("form").addEventListener("submit", async function (e) {
  e.preventDefault();
  const checkIn = document.querySelector("input[name='checkIn']").value;
  const checkOut = document.querySelector("input[name='checkOut']").value;

  if (!checkIn || !checkOut) {
    Swal.fire({
      icon: "warning",
      title: "Missing Dates",
      text: "Please select both check-in and check-out dates.",
      confirmButtonText: "OK"
    });
    return;
  }

  try {
    const url = `/listings/<%= listing._id %>/availability?checkIn=${encodeURIComponent(checkIn)}&checkOut=${encodeURIComponent(checkOut)}`;
    const res = await fetch(url, { credentials: "same-origin" });

    if (!res.ok) {
      const body = await res.json().catch(() => ({ message: res.statusText }));
      Swal.fire({
        icon: "error",
        title: "Error Checking Availability",
        text: body.message || body.error || res.statusText,
        confirmButtonText: "OK"
      });
      return;
    }

    const data = await res.json();

    if (!data.available) {
      // Show SweetAlert2 popup with Back or Stay option
      Swal.fire({
        icon: "error",
        title: "Not Available",
        text: "Sorry, these dates are not available.",
        showCancelButton: true,
        confirmButtonText: "Go Back",
        cancelButtonText: "Stay Here",
        reverseButtons: true
      }).then((result) => {
        if (result.isConfirmed) {
          window.location.href = `/listings/<%= listing._id %>`;
        }
      });
      return;
    }

    // available -> submit the form
    e.target.submit();
  } catch (err) {
    console.error("Fetch /availability error:", err);
    Swal.fire({
      icon: "error",
      title: "Error",
      text: "Error checking availability. Please try again. (" + (err.message || err) + ")",
      confirmButtonText: "OK"
    });
  }
});
</script>
